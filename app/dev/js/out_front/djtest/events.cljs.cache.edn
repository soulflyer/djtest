{:rename-macros {}, :renames {}, :externs {Date {}, setInterval {}}, :use-macros {}, :excludes #{}, :name djtest.events, :imports nil, :requires {rf re-frame.core, re-frame.core re-frame.core, db djtest.db, djtest.db djtest.db}, :uses {reg-event-fx re-frame.core}, :defs {dispatch-timer-event {:protocol-inline nil, :meta {:file "/Users/iain/Code/Clojure/Descjop/djtest/src_front/djtest/events.cljs", :line 13, :column 7, :end-line 13, :end-column 27, :arglists (quote ([]))}, :name djtest.events/dispatch-timer-event, :variadic false, :file "src_front/djtest/events.cljs", :end-column 27, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 13, :end-line 13, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, do-timer {:name djtest.events/do-timer, :file "src_front/djtest/events.cljs", :line 19, :column 1, :end-line 19, :end-column 18, :meta {:file "/Users/iain/Code/Clojure/Descjop/djtest/src_front/djtest/events.cljs", :line 19, :column 10, :end-line 19, :end-column 18}, :tag js}}, :require-macros nil, :cljs.analyzer/constants {:seen #{:timer :time :djtest.events/initialize-db :time-colour :time-colour-change}, :order [:djtest.events/initialize-db :timer :time :time-colour-change :time-colour]}, :doc nil}