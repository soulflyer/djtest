{:rename-macros {}, :renames {}, :externs {document {getElementById {}}}, :use-macros {}, :excludes #{}, :name djtest.core, :imports nil, :requires {reagent reagent.core, views djtest.views, reagent.core reagent.core, djtest.events djtest.events, djtest.views djtest.views, config djtest.config, events djtest.events, djtest.config djtest.config, re-frame re-frame.core, re-frame.core re-frame.core}, :uses {atom reagent.core}, :defs {state {:name djtest.core/state, :file "src_front/djtest/core.cljs", :line 8, :column 1, :end-line 8, :end-column 15, :meta {:file "/Users/iain/Code/Clojure/Descjop/djtest/src_front/djtest/core.cljs", :line 8, :column 10, :end-line 8, :end-column 15}, :tag any}, root-component {:protocol-inline nil, :meta {:file "/Users/iain/Code/Clojure/Descjop/djtest/src_front/djtest/core.cljs", :line 10, :column 7, :end-line 10, :end-column 21, :arglists (quote ([]))}, :name djtest.core/root-component, :variadic false, :file "src_front/djtest/core.cljs", :end-column 21, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 10, :end-line 10, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/Users/iain/Code/Clojure/Descjop/djtest/src_front/djtest/core.cljs", :line 14, :column 7, :end-line 14, :end-column 17, :arglists (quote ([setting]))}, :name djtest.core/mount-root, :variadic false, :file "src_front/djtest/core.cljs", :end-column 17, :method-params ([setting]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 1, :fn-var true, :arglists (quote ([setting]))}, init! {:protocol-inline nil, :meta {:file "/Users/iain/Code/Clojure/Descjop/djtest/src_front/djtest/core.cljs", :line 19, :column 7, :end-line 19, :end-column 12, :arglists (quote ([setting]))}, :name djtest.core/init!, :variadic false, :file "src_front/djtest/core.cljs", :end-column 12, :method-params ([setting]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 19, :end-line 19, :max-fixed-arity 1, :fn-var true, :arglists (quote ([setting]))}}, :require-macros {reagent reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{:djtest.events/initialize-db :h1 :p :message}, :order [:message :h1 :p :djtest.events/initialize-db]}, :doc nil}